# This file can be regenerated by running the following command:
#   helm template cilium ../../apps/kube-system/cilium --namespace kube-system | yq -i 'with(.cluster.inlineManifests.[] | select(.name=="cilium"); .contents=load_str("/dev/stdin"))' cilium.yaml
cluster:
  inlineManifests:
    - name: cilium
      contents: |
        ---
        # Source: cilium/charts/cilium/templates/cilium-agent/serviceaccount.yaml
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: "cilium"
          namespace: kube-system
        ---
        # Source: cilium/charts/cilium/templates/cilium-operator/serviceaccount.yaml
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: "cilium-operator"
          namespace: kube-system
        ---
        # Source: cilium/charts/cilium/templates/hubble-relay/serviceaccount.yaml
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: "hubble-relay"
          namespace: kube-system
        ---
        # Source: cilium/charts/cilium/templates/hubble-ui/serviceaccount.yaml
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: "hubble-ui"
          namespace: kube-system
        ---
        # Source: cilium/charts/cilium/templates/cilium-ca-secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: cilium-ca
          namespace: kube-system
        data:
          ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZWJIVTlVU28yK0RvamhaeUZ0c1o1VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpJME1qSXpPVFEwV2hjTk1qY3dOakkwTWpJegpPVFEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRDRIQUZlbUI2T0xEQzhsZUFQeTVSZHVKMi9IL011WWpRNDg0eFZUY2JyODA3TnF0aUUKaWpvLzBkNTFya3RYdTVPYlF2VUdNYVNYYW1sZlJhQmFPVUlxSWhYYXpzUWJMZTk3L2lJWFFGRzRZRlBLT3JCNAp1UnRicWV0OXpLVEJHdnErRlNVWWdVeVk5bFVnWUp4d3Y3VVllcm9UeVhydmx4N3VxMXZ6anlyTFBHYTYyZWdHCmVyT3JSZ3J3Q0plRlNuK21qWkFZcTVsaHpiQzd4bG04eVFsc0hMZzdjZU92R0xHMzJTVE5iSmdCVXVhdnJkbkkKSVFlVUUrSXdqU05ZREE2V3NzZ21EOWorVkwvN3EvS0RBZWM4UHJtbkowejBoc0ttdzdVMTBTTWdMNzV4RnZ2Ygo2RGo5OEN3Z04yRXpRMGFybWxsQS9lakxEVDJkRmxtbVdnbWhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVsSXNHNkgrSCtuWlhjQnlndEhadlRXdmhOTTR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDb0wrazhTdjdocFlxWi8yQ2szaGp0dnFXZHM4U2tCSkZ3SG0rNGo4bGFybHN1d2lURE9NMElLCk13Rm40NEVaVWx6TU1LaUVKQ2N5eldnNXFhSmpMdG9VZjR1ZXdMTmtGMnJOWW52ZWxhRkFPTXVOZlRBdVBVWGQKbURwb1Q3THExdy80d2VFLzMxc1o1Vk5vWUpsc0VVMGVmMkhsYlp3REJqZWZpT2VPVmpnaDAwQVN1YkxKZmc3awpDZDFKeWpkcVRlaFgyWnYrelE5ZVFyZnR6RUkyREJhdzFqTDV3Y3VqSHVWd3R4L3F3MHpFMEFLK2VIZmZJc1BhCjF3WTZKdTZ4L0FXVUkwaCsrbk9tb1R5Q2I0N254azExaTV1ZlcxWjV2TFRWcU5nS1V1UzBRdnRoNVFkZW9DU3cKVVBtQVMxMVR5VWNtaDgzcjgrbGcybXJRUGZ1eDhaQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBK0J3QlhwZ2VqaXd3dkpYZ0Q4dVVYYmlkdngvekxtSTBPUE9NVlUzRzYvTk96YXJZCmhJbzZQOUhlZGE1TFY3dVRtMEwxQmpHa2wycHBYMFdnV2psQ0tpSVYyczdFR3kzdmUvNGlGMEJSdUdCVHlqcXcKZUxrYlc2bnJmY3lrd1JyNnZoVWxHSUZNbVBaVklHQ2NjTCsxR0hxNkU4bDY3NWNlN3F0Yjg0OHF5enhtdXRubwpCbnF6cTBZSzhBaVhoVXAvcG8yUUdLdVpZYzJ3dThaWnZNa0piQnk0TzNIanJ4aXh0OWtreld5WUFWTG1yNjNaCnlDRUhsQlBpTUkwaldBd09sckxJSmcvWS9sUy8rNnZ5Z3dIblBENjVweWRNOUliQ3BzTzFOZEVqSUMrK2NSYjcKMitnNC9mQXNJRGRoTTBOR3E1cFpRUDNveXcwOW5SWlpwbG9Kb1FJREFRQUJBb0lCQUQvY3pZbHd0R1M2QVMxNQprbnZlVmVrdHpRVFdEMzAvNzlzODdVRkR6TkVOQnBxdndCMlZpdHJFaFhOYkVxK1phNndLTnhHS0U2aVp6bGVrCmoxcko1RHIrSFF2K0xzSWtOOEY5cjM2Mm9wSkgwU2w3bzlMZktxaVVlellkUjhjZ3o2dS91NVdzS25Bdzc4WnUKdDdYWjBwNWpjS1FKTjJpV1NITDhqcVdKazJWT1BCQTVGRFdaZHBWc1FJQjVicVBJeWJRVzF0VTBBRmhZdDVFQQprbWl1VzRlSXZ2aHJDVTRCN2tKTnBWbGRhMEVOV3JqSzduL2JOSGd3OWFveWJILzMvRURqRUZtRzVIM3lyZ3AwCnJVWU5JZVJkWlBUSWZaYzkwcWdzOWRsUnpwVzYzcWc3VVM0UTQvREd1ZFRITXIySERqS01IL2IzbU1LeEo0dmUKSHhoM1FmRUNnWUVBL2VJYlhHaCtPcElFK2g1c2RSQTZvdlVPSndTOFk5OVNKeERrYlNwQ3NCOVI3aFNHdzZUaApHR29ndWg5dk9iNVhaeHVDaUxNdTIyTU1uemJIamkrTDJzUGZ5Z0tzZStYcDFnTDRKYjlIMEdDTS8rU0N5SklJCnRRTVJwNncybHpKdVlzc0Y1ZFYvZzFIRXZOalRFZEJxSU9nUy9SUjlqRUoyMFRGcW96WVprNVVDZ1lFQStpMlQKSHZhcHh3c0pkbnhETENxZVMxOUFnaEpiMEV3WGVGZE90b012aG10T2Ntc2VSWTNCMUxLdnFtTXBXblhuTG5KbwppK2dEMlBKSkJUa2ROazIvKzVsbzBja2lXYkxNVCt1VVgvMGhjOGw2bmhlYTMvV1ptVTFTSkVROWtPMjMwbDMvClZ0MkNYeXo4aysrVm03bHh1cFZZRUlsU3M2TllBSUZnakRJR210MENnWUFpTGVtUEZFWkNMbHhiSy9OZ0F6SlIKcy9vV3lLMXdLS1dQdXRkMTF1V3BmbDN5Vm5NYUxiMWNJeFdLMlNhSk9KWGR2TGRqSGZSbDlyekJSb2V4SGJlUApXU1ZzdGRWd3pMQWhicjdubmd2V0F0bVlyYlBwdXJkUFh6MW1QR29SQ3VvUGhOT2pjSTI5S1NuNlhwcHo0SUlaCk1nVTBheWpIMUQ3WXhQVmRTYkJCelFLQmdBUXBNZU0zOHdidWRnL1ViVUdVeStFeENsK2Zjb3Q2V0lHVjRpZEMKODAxbkIzejdyeHMxQ2w1QlFvNnc2NFVucE5xdTZISTdQNlVpRW5qVnhGaWMzbTZPMUtGNG1PdW8vNkRzcUNFWQprcS9jVC8vRklMeE0xMnNuVUJCdVdoL0k5Ris1VkgvYlcwbTk4ODE2RktEc2FxblJ4Zzh3V1lISFc3VldjWWFqClpseTVBb0dCQU00UVJ5VTNUaE5PZ3NKQjhnYXZyRTZEVk0rWGZyRU8xcExJNHM5WmRHTE9udlRsT1BIck1hTkgKTi96MTBzSitUdVhkQlRqcGcwWlp2TVFjOWRZNnlaK2NiUTFaREFXZWE1ZTd6bmMvM29pNTZxcHF3M3lqK21vVApKa1Vycks1WisrSnlGZVRCU2ZBdCs2OE1Uai83L3BOSTAxVEoxam1kY3QvRm4yVDZqdmtzCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        ---
        # Source: cilium/charts/cilium/templates/hubble/tls-helm/relay-client-secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: hubble-relay-client-certs
          namespace: kube-system
        type: kubernetes.io/tls
        data:
          ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZWJIVTlVU28yK0RvamhaeUZ0c1o1VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpJME1qSXpPVFEwV2hjTk1qY3dOakkwTWpJegpPVFEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRDRIQUZlbUI2T0xEQzhsZUFQeTVSZHVKMi9IL011WWpRNDg0eFZUY2JyODA3TnF0aUUKaWpvLzBkNTFya3RYdTVPYlF2VUdNYVNYYW1sZlJhQmFPVUlxSWhYYXpzUWJMZTk3L2lJWFFGRzRZRlBLT3JCNAp1UnRicWV0OXpLVEJHdnErRlNVWWdVeVk5bFVnWUp4d3Y3VVllcm9UeVhydmx4N3VxMXZ6anlyTFBHYTYyZWdHCmVyT3JSZ3J3Q0plRlNuK21qWkFZcTVsaHpiQzd4bG04eVFsc0hMZzdjZU92R0xHMzJTVE5iSmdCVXVhdnJkbkkKSVFlVUUrSXdqU05ZREE2V3NzZ21EOWorVkwvN3EvS0RBZWM4UHJtbkowejBoc0ttdzdVMTBTTWdMNzV4RnZ2Ygo2RGo5OEN3Z04yRXpRMGFybWxsQS9lakxEVDJkRmxtbVdnbWhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVsSXNHNkgrSCtuWlhjQnlndEhadlRXdmhOTTR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDb0wrazhTdjdocFlxWi8yQ2szaGp0dnFXZHM4U2tCSkZ3SG0rNGo4bGFybHN1d2lURE9NMElLCk13Rm40NEVaVWx6TU1LaUVKQ2N5eldnNXFhSmpMdG9VZjR1ZXdMTmtGMnJOWW52ZWxhRkFPTXVOZlRBdVBVWGQKbURwb1Q3THExdy80d2VFLzMxc1o1Vk5vWUpsc0VVMGVmMkhsYlp3REJqZWZpT2VPVmpnaDAwQVN1YkxKZmc3awpDZDFKeWpkcVRlaFgyWnYrelE5ZVFyZnR6RUkyREJhdzFqTDV3Y3VqSHVWd3R4L3F3MHpFMEFLK2VIZmZJc1BhCjF3WTZKdTZ4L0FXVUkwaCsrbk9tb1R5Q2I0N254azExaTV1ZlcxWjV2TFRWcU5nS1V1UzBRdnRoNVFkZW9DU3cKVVBtQVMxMVR5VWNtaDgzcjgrbGcybXJRUGZ1eDhaQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUsvZ0txVDNEMlg3enRYakwzNXAwUkl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeU5ESXlNemswTkZvWERUSTNNRFl5TkRJeQpNemswTkZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQWtyRTYxUmVhNHJUVUUvTnhtZFFKRnUvMVUwbU0KbnQ1a2ZLUmV2RWJkeFJSL0Zjc1FFNnNpNUVuTk0rc3ZkMjFMU1UxODhDQ2RETlc0ZVJoSGVXMGd5Rm9aVVJUdQppaWxhRXp2b1ljendUMnBQTmVVM3ZyM1cxdWJiRFJrQm9ZaVVyUnd3SkZzaU96cUswNHdaSG9VMUVaQU9kY2hMCjFJbmExbXQ0b3pvT1EvRy9RdVhHaUExVmJpRFlMZHAwWUtyTkpCVW90cUNEMXdtTUNBVG1RWTVWWXQ0d2FPUWsKNWxRbmhEemxBNDZicDRUSXJNQnh1ZVdMaWt4S2pTSUQ1U1NJVXYzVTVXNGFWbzlRbUZRMStBSVhPUTNxN2VkYQpHaXpicGNUZlZxY0N1Wlg5cUpEVUtMM291MHRxenlYK3NIeWhsbWNWZmJlckdEU013VS8vSWtieXF3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU1Vpd2JvZjRmNmRsZHdIS0MwZG05TgphK0UwempBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSjdiSWZuOCtuYUpYNVR2c3h4OFNMVExnZDRJdnR6c21YNjdEVTZ3dGYvTDlibXYKbDVRODZNcDFFVmcxcFcwNXMyN3Q3VERnWE9QU1BLT29rN0o5WnlOR0o3RG81ZlVCZGhQVGlrWkZTanhpT3FxSgpSUERKeXp5Qjl5RlFtWE1mZkFOMjBwZFNlU1pZSElRVVFOL090UVA4L2p5UWJnQ2lmeEZJYkMzZCs4azdnd2thCjNCSGtqU2twMVNhY3BOQzh4YTloOFZER1ZqUjZQdnR1ajdGT3k3Q0ExN01oOGFha1RQcmV3RkMwQytEbkFvdWsKY0VMaUNKaDZVYnAzVWNYZmVTT045NmJEallWc2lScVlxajNHNDZRVW00MmRaUDQ4ZTd3LytSSUlUNHNaL1lRbQpaZXQ1WGNyQU9EMEg4NnZqNWlpYW83dEdDcEFqWU1OWXY3c21mVTg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
          tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBa3JFNjFSZWE0clRVRS9OeG1kUUpGdS8xVTBtTW50NWtmS1JldkViZHhSUi9GY3NRCkU2c2k1RW5OTStzdmQyMUxTVTE4OENDZEROVzRlUmhIZVcwZ3lGb1pVUlR1aWlsYUV6dm9ZY3p3VDJwUE5lVTMKdnIzVzF1YmJEUmtCb1lpVXJSd3dKRnNpT3pxSzA0d1pIb1UxRVpBT2RjaEwxSW5hMW10NG96b09RL0cvUXVYRwppQTFWYmlEWUxkcDBZS3JOSkJVb3RxQ0Qxd21NQ0FUbVFZNVZZdDR3YU9RazVsUW5oRHpsQTQ2YnA0VElyTUJ4CnVlV0xpa3hLalNJRDVTU0lVdjNVNVc0YVZvOVFtRlExK0FJWE9RM3E3ZWRhR2l6YnBjVGZWcWNDdVpYOXFKRFUKS0wzb3UwdHF6eVgrc0h5aGxtY1ZmYmVyR0RTTXdVLy9Ja2J5cXdJREFRQUJBb0lCQUZidWZNVUhwaHd2dVhiUgpVRU12S3V2UzdIbWRIcDZQZ05GMHYwZW9YNGlKcXY2SlJrL0JuWDNZVnFrcitRYzNWK1JxN1YySWxrbWk1aDJ0ClM3NGo4OGVIelhVRmlJK01EZnRVQjFUZUZKT2JsckdEMDFOUVFWODlsQmJnK054M2lsUkVYaXROYnEzVzlhcUUKWGVaK1hvSzM4am5PcDFHZkdIYjFYWnF0cndLSC9YZEZuSjNnVmlXclFGa1dwMTRGeGE4dlB3ZElERFhtMnhzNAowVEdRNFVXN2FvNXBzRDIxTjg4dklTdG9WRnpkeWk1a0dLZXB2d1AyT3hSdmZsTG9id2RhVDE3dHk0bk5jRW9nCjBPYWt3emE5QWpvaFBwOUJKTDJHSnU5MU0vTUIwc0VkM1VjUnR0QnBUUGJzVXBxVXF0TGg1RmRPNUkwYmF6d3MKTk8yQndKRUNnWUVBd2lEaGhwL3VSdFpYeGZFcG5UZTI0dmhWc2VsdExQRjFTVkRtWU5IdzF4NUx1UnI4Y1czMwpld3A2NHRiS3VXeFh1L0FXbVVqbEdEa0ovdVp2SlU5bXJlQXlmeE9SNDh5WStMVW5UOGl1NlpkNXhTTTZEYVc5CjcrbWl0MWtWdXREenN1V05qYTBPZmp2WDJyK21qM08xaU1aZWdWMlVRTzh2MDh0Rk9yYmdsbFVDZ1lFQXdYSDkKbEcwVUUwLzM5b0xVcXpRWkd4WXBTRWFBeXU3L2VKU1VrbXN2YkZKaUlxaGFEeGlESWJJbC9GdU9DR2F4SXR0VwpvTEUybldMYytrRlJZNzVRVkdScWdHZmY2aFNUSUxGMGcvTHZtN1pUeE5MUWQwR3hqNDRoMWpnWlZUK2QzVGZqCmpmUjh4SkFqNmxZRXBzalRQZ3RXeFp0Q1ZHVW95ZkdHSTY1NFpQOENnWUE0Q3hZUXI0c3ltQjZ1M25pTkV0Q1IKcGUvWGRQUTN6VjEyMVF3dFYyNllLLzdnYVpJSGpSK3RQZEZNTzRZN0ViUWlaYVdnaXhMWWMxOFhYNThtdmsxKwpWUU0rL0g5WnJHOWRIYTlEc1VRTjI5VWp2SSs5OE9Oc3A1NTZJQlhONFJUNXlKdWRFeURrQUpMSWJCdkJ2ajNpClJxSng1bm91Wk44QjNlVVdsa1V3SVFLQmdHTWI3T2lqcmhwcTZVYnlKdFdFUHF5akFRbVhuWnJiTWlac01XYUcKNWVnZ21VamFhakc3eEV0NlEzMzB4bU5GZ2RHekFNSVpxVHFma1VuaU56bmNJcm5xTEtxWERhQ1hZLzNuRFNRaApUbU8vMlZGSkZTZFVrQTFWcTc1ZVJaUm9vSS9iZDRtZVRtSkMyelBQV0ZpL0lZTnpPY1RLVkFSN1E1ZWJWN2RtClJ5YXZBb0dCQUxybVgrMFVrS0tnSmdsREVwRk9zaTVJMk0xQ2xIcmFsb01XNGVuSGZnUVJxM1dveEFtcGVKV2kKY2JaM1JmMUpnQ08yWWNjT2xXeTRaelZSY21QdWUwUnRscjJ0S0pia3hrWGNiYmRpU0ZhLzNLaml5QWR5Wm4waApYTmhUNkZyS0FFalo5UmFVQjFOdUZ2SDRTTjlOSTdVdnUvSmpkOUEyV0dyNURiNUk4RFJjCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        ---
        # Source: cilium/charts/cilium/templates/hubble/tls-helm/server-secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: hubble-server-certs
          namespace: kube-system
        type: kubernetes.io/tls
        data:
          ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZWJIVTlVU28yK0RvamhaeUZ0c1o1VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TmpJME1qSXpPVFEwV2hjTk1qY3dOakkwTWpJegpPVFEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRDRIQUZlbUI2T0xEQzhsZUFQeTVSZHVKMi9IL011WWpRNDg0eFZUY2JyODA3TnF0aUUKaWpvLzBkNTFya3RYdTVPYlF2VUdNYVNYYW1sZlJhQmFPVUlxSWhYYXpzUWJMZTk3L2lJWFFGRzRZRlBLT3JCNAp1UnRicWV0OXpLVEJHdnErRlNVWWdVeVk5bFVnWUp4d3Y3VVllcm9UeVhydmx4N3VxMXZ6anlyTFBHYTYyZWdHCmVyT3JSZ3J3Q0plRlNuK21qWkFZcTVsaHpiQzd4bG04eVFsc0hMZzdjZU92R0xHMzJTVE5iSmdCVXVhdnJkbkkKSVFlVUUrSXdqU05ZREE2V3NzZ21EOWorVkwvN3EvS0RBZWM4UHJtbkowejBoc0ttdzdVMTBTTWdMNzV4RnZ2Ygo2RGo5OEN3Z04yRXpRMGFybWxsQS9lakxEVDJkRmxtbVdnbWhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVsSXNHNkgrSCtuWlhjQnlndEhadlRXdmhOTTR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDb0wrazhTdjdocFlxWi8yQ2szaGp0dnFXZHM4U2tCSkZ3SG0rNGo4bGFybHN1d2lURE9NMElLCk13Rm40NEVaVWx6TU1LaUVKQ2N5eldnNXFhSmpMdG9VZjR1ZXdMTmtGMnJOWW52ZWxhRkFPTXVOZlRBdVBVWGQKbURwb1Q3THExdy80d2VFLzMxc1o1Vk5vWUpsc0VVMGVmMkhsYlp3REJqZWZpT2VPVmpnaDAwQVN1YkxKZmc3awpDZDFKeWpkcVRlaFgyWnYrelE5ZVFyZnR6RUkyREJhdzFqTDV3Y3VqSHVWd3R4L3F3MHpFMEFLK2VIZmZJc1BhCjF3WTZKdTZ4L0FXVUkwaCsrbk9tb1R5Q2I0N254azExaTV1ZlcxWjV2TFRWcU5nS1V1UzBRdnRoNVFkZW9DU3cKVVBtQVMxMVR5VWNtaDgzcjgrbGcybXJRUGZ1eDhaQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUpmbmgrU0t3ZFA0azYrcXgxOVhPVm93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeU5ESXlNemswTkZvWERUSTNNRFl5TkRJeQpNemswTkZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1MUWZldHU2SnUwRzRFRVhvU1kKdFllQmp6RFhpa0o0K3Q2eXJPdW1NWjFlckhTZ1dmb3VXU2dNUFg3QkU3MHM4RnZxRXlwM1hvSGNJOXN6YnRoNwpzSCtoZHFoS0NuUFdPQ0dLK3dvU1Mvb0JNbGVHZDAwWXo5RWw5QzhPNTZzRnJKN2IvWnBVTE16eFBCeXhCUnpHCmFWdUJFZFk4WUNaT1F6V3FILzBBdlg0ZHByUHNYN2I5by9DZi9TVGMrU0hOVXhscWppRWRGOElXYUlXcXhxcmoKQm1OcGJvcnp4NDMyWEdQVG5zaFF0aUdIa216K3JEUkNDWEJ4UlRMSElPZXpVS1plUzNVV0VEWlNRUUFrQlJlZAp0dEhFaDVWaFY5dWpLWU02OSt0ZlU2WURZUnNBVGdWbE9SRUVBUWQwMDZYS0ZGbHU0NC9WWEhlenhWOEU3Zi9ICkFIa0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVWxJc0c2SCtIK25aWApjQnlndEhadlRXdmhOTTR3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUREUGNzYkJoMTY4MDg5ZXFGY3lJQzkzdVpOWkYKaVMxMyt6NExvbTdtOUx5NzJldzNlaEphK1dyNnFxSTRYUU5rZk1GSFB3Vm42T2ZCRjYzdEZVbmtad0d6UVdZRwptMytRWEkrbDZ5RFUwZGdhNS9JM1g5QW82QVNHOW1vZk1MS0FiTVVwSE5vZ1dUVlZuVU81aGxGdzBndGhmZ2o3ClA3aVJLUG5HL25WSCtWU095eldVa1p6SnBad2JEcHJzTHJsTXpkZmFqQUVoWi9FelpEUFNvZlpyQStIak1kR0QKSC9zTE1xNy9VcmI2bXJRcW9QQlBPck9EN3dQY2prZlRXeC9yMWJoUmNLaVo3V3FnM2lGUTFZTDhMZEdYYXhFZgpzYUNOczJjQm1RRDUyUkxLSnprcG5LNXVUMWV1eUZJblZ3WlY3YWIrYm95T0w1SlgrTVd0MW5VWmpBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd3RCOTYyN29tN1FiZ1FSZWhKaTFoNEdQTU5lS1FuajYzcktzNjZZeG5WNnNkS0JaCitpNVpLQXc5ZnNFVHZTendXK29US25kZWdkd2oyek51Mkh1d2Y2RjJxRW9LYzlZNElZcjdDaEpMK2dFeVY0WjMKVFJqUDBTWDBMdzducXdXc250djltbFFzelBFOEhMRUZITVpwVzRFUjFqeGdKazVETmFvZi9RQzlmaDJtcyt4Zgp0djJqOEovOUpOejVJYzFUR1dxT0lSMFh3aFpvaGFyR3F1TUdZMmx1aXZQSGpmWmNZOU9leUZDMklZZVNiUDZzCk5FSUpjSEZGTXNjZzU3TlFwbDVMZFJZUU5sSkJBQ1FGRjUyMjBjU0hsV0ZYMjZNcGd6cjM2MTlUcGdOaEd3Qk8KQldVNUVRUUJCM1RUcGNvVVdXN2pqOVZjZDdQRlh3VHQvOGNBZVFJREFRQUJBb0lCQVFDdU51S1VXdjlhMW1yTwpLb2tYekxSeGRIUUh1b2lpdnl1aFlXbHY1cFJ4NWNzVkZKekNOUlozME5KaGV1cGEvMGdHK2tHZmRWWW5qU1RuCmpvd3V2aFh0WFFnT29QL043U0VQSmdrdlRZTnlGQVhmN1pqY2NqYk9FMEhWbjErZk9oalBpMjJ6eUZpMEFYcS8KTWJLZnMvTmQ2QU42Y1UyT2sraFlva1d1N0MySkRBMmxhcXNUVWZBbUlJOHVuSS8xUE03WVBBa1hFVFBsbk8wawpiNVdtUkJhQnh0OS9iems0RzFoVEJhQXBMWCtzSjhzMXRpcUw2Wi9UVVpiYkIwSG8wd2VaalVBdTVjN01ZeXpXCjFkZk1ZbDZGMThkUUIzR3NFaVNGMk0reHhnN0VOZDhlWlZHWXprbytiUWFVeEZWOEdYdlc2eGE0dnFqa3VKeDAKcU5HaDQxUUJBb0dCQU53L2JtU1UxR1NuZVRXVEwxQ24yTGlIUHhua3VzbUg0R1hBRFF0Wk4yRUR2d1pTR3RpTgpNWnd3enBpbzVGZ1hTcHhpMHh3ZVFHZG5OQldNdWVEaUhXTVNxU2p5Yk5YbzhTYzViNktTZHZTRTYzVWdZbWhvCnlkRTlzZ3VnSjV0ZFVBZDdsTDV4SGFNTGY4N1dWbWp6VVp5TjhoV3ZsajNZYjg5akxJbEtpSUtCQW9HQkFPSncKS0ZqV1o4em9SZXd3dG1WcUJaR3RhTnZzeFNhblJRTUtpbzlSN013QVR3K0c0VVlXZzhjdzVJQzFtVzczd2xXYwpjQ0crV3hNcmFiMWhvVEo2L0oySGhwQkIrb1BBS3d5Uks3eEhYbG9ZS0txaktjTGtXSG1qc1JPUGIxM29RbVQ5CjNvVWQrOXMrWlhaVWw2U2FWa3JZZUVJejk4WGpKdVkydlNnNmxaSDVBb0dBRWd2NGhiRlVQZk1qRVdyQUE4SGQKRmpHdXovWlgvODlzYWFuMDU2c2x5SU5BRWNxRWZKNEZKS0V6TEhzYVNzV056WWFqZWJoWTJxQXdPbHZQbDBldgoxTUJnc0FROU9zSGRrTE02SEg0WDFTMVhCYi9qa0Y2VnV0bHRUMXFPSkVMZkhkM1ljRXBnZlUyaDZWYlN1Y0xHCk95ZStZRnlFMlFoMUVPODFaUUtBY1FFQ2dZQkw1ODhPb0tqaEhvZTUra1phVHFVWlJXa2VPQXVLdm8yNnpFRFEKZEdVTnFaalhHcDdQa09LUjFranpBRzB6cnFnZGJMaUdCenFlZlhJUHd2ZDNaWlRpOWJoZENWRUI4MXc2OVRzVQovVk9hbmZpYjR1QXY3YjNlNE1tT1Jnbk9EL3Fad2lSaXVUOWhLbFIyeXpxZU9nSnRTbzFkbS9BV0RPUlFUYzh3CitocURlUUtCZ0E5a25TSWpoR0ZyWHVmeHcwdE01cjBaOW1kSHZ4ckptbXpPdnUyQncwM3ZvV3BvSFhJaEY5RFoKQWN0dXdrTmlMb3hUekMwbHJPWEJWM08yY0ZVRVN0K0R2bEZOUUk3c0dBMkR6UTRyNUtVY1k5K2dtenlWMisyWgp2TURqUDcwSmRZUkR2dnRqdDlRcFZBekVaSm9iYzdhQlNPWkNmd0pHbnNFOUZyS3VUdHQyCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        ---
        # Source: cilium/charts/cilium/templates/cilium-configmap.yaml
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: cilium-config
          namespace: kube-system
        data:

          # Identity allocation mode selects how identities are shared between cilium
          # nodes by setting how they are stored. The options are "crd" or "kvstore".
          # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
          #   These can be queried with:
          #     kubectl get ciliumid
          # - "kvstore" stores identities in an etcd kvstore, that is
          #   configured below. Cilium versions before 1.6 supported only the kvstore
          #   backend. Upgrades from these older cilium versions should continue using
          #   the kvstore by commenting out the identity-allocation-mode below, or
          #   setting it to "kvstore".
          identity-allocation-mode: crd
          identity-heartbeat-timeout: "30m0s"
          identity-gc-interval: "15m0s"
          cilium-endpoint-gc-interval: "5m0s"
          nodes-gc-interval: "5m0s"
          skip-cnp-status-startup-clean: "false"

          # If you want to run cilium in debug mode change this value to true
          debug: "false"
          # The agent can be put into the following three policy enforcement modes
          # default, always and never.
          # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
          enable-policy: "default"
          # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
          # field is not set.
          proxy-prometheus-port: "9964"
          # If you want metrics enabled in cilium-operator, set the port for
          # which the Cilium Operator will have their metrics exposed.
          # NOTE that this will open the port on the nodes where Cilium operator pod
          # is scheduled.
          operator-prometheus-serve-addr: ":9963"
          enable-metrics: "true"

          # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
          # address.
          enable-ipv4: "true"

          # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
          # address.
          enable-ipv6: "false"
          # Users who wish to specify their own custom CNI configuration file must set
          # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
          custom-cni-conf: "false"
          enable-bpf-clock-probe: "false"
          # If you want cilium monitor to aggregate tracing for packets, set this level
          # to "low", "medium", or "maximum". The higher the level, the less packets
          # that will be seen in monitor output.
          monitor-aggregation: medium

          # The monitor aggregation interval governs the typical time between monitor
          # notification events for each allowed connection.
          #
          # Only effective when monitor aggregation is set to "medium" or higher.
          monitor-aggregation-interval: "5s"

          # The monitor aggregation flags determine which TCP flags which, upon the
          # first observation, cause monitor notifications to be generated.
          #
          # Only effective when monitor aggregation is set to "medium" or higher.
          monitor-aggregation-flags: all
          # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
          # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
          bpf-map-dynamic-size-ratio: "0.0025"
          # bpf-policy-map-max specifies the maximum number of entries in endpoint
          # policy map (per endpoint)
          bpf-policy-map-max: "16384"
          # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
          # backend and affinity maps.
          bpf-lb-map-max: "65536"
          bpf-lb-external-clusterip: "false"

          # Pre-allocation of map entries allows per-packet latency to be reduced, at
          # the expense of up-front memory allocation for the entries in the maps. The
          # default value below will minimize memory usage in the default installation;
          # users who are sensitive to latency may consider setting this to "true".
          #
          # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
          # this option and behave as though it is set to "true".
          #
          # If this value is modified, then during the next Cilium startup the restore
          # of existing endpoints and tracking of ongoing connections may be disrupted.
          # As a result, reply packets may be dropped and the load-balancing decisions
          # for established connections may change.
          #
          # If this option is set to "false" during an upgrade from 1.3 or earlier to
          # 1.4 or later, then it may cause one-time disruptions during the upgrade.
          preallocate-bpf-maps: "false"

          # Regular expression matching compatible Istio sidecar istio-proxy
          # container image names
          sidecar-istio-proxy-image: "cilium/istio_proxy"

          # Name of the cluster. Only relevant when building a mesh of clusters.
          cluster-name: default
          # Unique ID of the cluster. Must be unique across all conneted clusters and
          # in the range of 1 and 255. Only relevant when building a mesh of clusters.
          cluster-id: "0"

          # Encapsulation mode for communication between nodes
          # Possible values:
          #   - disabled
          #   - vxlan (default)
          #   - geneve
          # Default case
          routing-mode: "tunnel"
          tunnel-protocol: "vxlan"
          service-no-backend-response: "reject"


          # Enables L7 proxy for L7 policy enforcement and visibility
          enable-l7-proxy: "true"

          enable-ipv4-masquerade: "true"
          enable-ipv4-big-tcp: "false"
          enable-ipv6-big-tcp: "false"
          enable-ipv6-masquerade: "true"
          enable-masquerade-to-route-source: "false"

          enable-xt-socket-fallback: "true"
          install-no-conntrack-iptables-rules: "false"

          auto-direct-node-routes: "false"
          enable-local-redirect-policy: "false"

          kube-proxy-replacement: "true"
          kube-proxy-replacement-healthz-bind-address: ""
          bpf-lb-sock: "false"
          enable-health-check-nodeport: "true"
          enable-health-check-loadbalancer-ip: "false"
          node-port-bind-protection: "true"
          enable-auto-protect-node-port-range: "true"
          bpf-lb-acceleration: "disabled"
          enable-svc-source-range-check: "true"
          enable-l2-neigh-discovery: "true"
          arping-refresh-period: "30s"
          enable-k8s-networkpolicy: "true"
          # Tell the agent to generate and write a CNI configuration file
          write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
          cni-exclusive: "true"
          cni-log-file: "/var/run/cilium/cilium-cni.log"
          enable-endpoint-health-checking: "true"
          enable-health-checking: "true"
          enable-well-known-identities: "false"
          enable-remote-node-identity: "true"
          synchronize-k8s-nodes: "true"
          operator-api-serve-addr: "127.0.0.1:9234"
          # Enable Hubble gRPC service.
          enable-hubble: "true"
          # UNIX domain socket for Hubble server to listen to.
          hubble-socket-path: "/var/run/cilium/hubble.sock"
          hubble-export-file-max-size-mb: "10"
          hubble-export-file-max-backups: "5"
          # An additional address for Hubble server to listen to (e.g. ":4244").
          hubble-listen-address: ":4244"
          hubble-disable-tls: "false"
          hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
          hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
          hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
          ipam: "kubernetes"
          ipam-cilium-node-update-rate: "15s"
          egress-gateway-reconciliation-trigger-interval: "1s"
          enable-vtep: "false"
          vtep-endpoint: ""
          vtep-cidr: ""
          vtep-mask: ""
          vtep-mac: ""
          enable-bgp-control-plane: "false"
          procfs: "/host/proc"
          bpf-root: "/sys/fs/bpf"
          cgroup-root: "/sys/fs/cgroup"
          enable-k8s-terminating-endpoint: "true"
          enable-sctp: "false"

          k8s-client-qps: "10"
          k8s-client-burst: "20"
          remove-cilium-node-taints: "true"
          set-cilium-node-taints: "true"
          set-cilium-is-up-condition: "true"
          unmanaged-pod-watcher-interval: "15"
          # default DNS proxy to transparent mode in non-chaining modes
          dnsproxy-enable-transparent-mode: "true"
          tofqdns-dns-reject-response-code: "refused"
          tofqdns-enable-dns-compression: "true"
          tofqdns-endpoint-max-ip-per-hostname: "50"
          tofqdns-idle-connection-grace-period: "0s"
          tofqdns-max-deferred-connection-deletes: "10000"
          tofqdns-proxy-response-max-delay: "100ms"
          agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

          mesh-auth-enabled: "true"
          mesh-auth-queue-size: "1024"
          mesh-auth-rotated-identities-queue-size: "1024"
          mesh-auth-gc-interval: "5m0s"

          proxy-xff-num-trusted-hops-ingress: "0"
          proxy-xff-num-trusted-hops-egress: "0"
          proxy-connect-timeout: "2"
          proxy-max-requests-per-connection: "0"
          proxy-max-connection-duration-seconds: "0"
          proxy-idle-timeout-seconds: "60"

          external-envoy-proxy: "false"
          max-connected-clusters: "255"

        # Extra config allows adding arbitrary properties to the cilium config.
        # By putting it at the end of the ConfigMap, it's also possible to override existing properties.
        ---
        # Source: cilium/charts/cilium/templates/hubble-relay/configmap.yaml
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: hubble-relay-config
          namespace: kube-system
        data:
          config.yaml: |
            cluster-name: default
            peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
            listen-address: :4245
            gops: true
            gops-port: "9893"
            dial-timeout: 
            retry-timeout: 
            sort-buffer-len-max: 
            sort-buffer-drain-timeout: 
            tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
            tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
            tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
            disable-server-tls: true
        ---
        # Source: cilium/charts/cilium/templates/hubble-ui/configmap.yaml
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: hubble-ui-nginx
          namespace: kube-system
        data:
          nginx.conf: "server {\
            listen       8081;\
            listen       [::]:8081;\
            server_name  localhost;\
            root /app;\
            index index.html;\
            client_max_body_size 1G;\
        \
            location / {\
                proxy_set_header Host $host;\
                proxy_set_header X-Real-IP $remote_addr;\
        \
                # CORS\
                add_header Access-Control-Allow-Methods \\"GET, POST, PUT, HEAD, DELETE, OPTIONS\\";\
                add_header Access-Control-Allow-Origin *;\
                add_header Access-Control-Max-Age 1728000;\
                add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\
                add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\
                if ($request_method = OPTIONS) {\
                    return 204;\
                }\
                # /CORS\
        \
                location /api {\
                    proxy_http_version 1.1;\
                    proxy_pass_request_headers on;\
                    proxy_hide_header Access-Control-Allow-Origin;\
                    proxy_pass http://127.0.0.1:8090;\
                }\
                location / {\
                    # double `/index.html` is required here \
                    try_files $uri $uri/ /index.html /index.html;\
                }\
        \
                # Liveness probe\
                location /healthz {\
                    access_log off;\
                    add_header Content-Type text/plain;\
                    return 200 'ok';\
                }\
            }\
        }"
        ---
        # Source: cilium/charts/cilium/templates/cilium-agent/clusterrole.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: cilium
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - discovery.k8s.io
          resources:
          - endpointslices
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - namespaces
          - services
          - pods
          - endpoints
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - list
          - watch
          # This is used when validating policies in preflight. This will need to stay
          # until we figure out how to avoid "get" inside the preflight, and then
          # should be removed ideally.
          - get
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools
          - ciliumbgppeeringpolicies
          - ciliumbgpnodeconfigs
          - ciliumbgpadvertisements
          - ciliumbgppeerconfigs
          - ciliumclusterwideenvoyconfigs
          - ciliumclusterwidenetworkpolicies
          - ciliumegressgatewaypolicies
          - ciliumendpoints
          - ciliumendpointslices
          - ciliumenvoyconfigs
          - ciliumidentities
          - ciliumlocalredirectpolicies
          - ciliumnetworkpolicies
          - ciliumnodes
          - ciliumnodeconfigs
          - ciliumcidrgroups
          - ciliuml2announcementpolicies
          - ciliumpodippools
          verbs:
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          - ciliumendpoints
          - ciliumnodes
          verbs:
          - create
        - apiGroups:
          - cilium.io
          # To synchronize garbage collection of such resources
          resources:
          - ciliumidentities
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints
          verbs:
          - delete
          - get
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes
          - ciliumnodes/status
          verbs:
          - get
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies/status
          - ciliumclusterwidenetworkpolicies/status
          - ciliumendpoints/status
          - ciliumendpoints
          - ciliuml2announcementpolicies/status
          - ciliumbgpnodeconfigs/status
          verbs:
          - patch
        ---
        # Source: cilium/charts/cilium/templates/cilium-operator/clusterrole.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: cilium-operator
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
          - list
          - watch
          # to automatically delete [core|kube]dns pods so that are starting to being
          # managed by Cilium
          - delete
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          # To remove node taints
          - nodes
          # To set NetworkUnavailable false on startup
          - nodes/status
          verbs:
          - patch
        - apiGroups:
          - discovery.k8s.io
          resources:
          - endpointslices
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          # to perform LB IP allocation for BGP
          - services/status
          verbs:
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          # to check apiserver connectivity
          - namespaces
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          # to perform the translation of a CNP that contains `ToGroup` to its endpoints
          - services
          - endpoints
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies
          - ciliumclusterwidenetworkpolicies
          verbs:
          # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
          - create
          - update
          - deletecollection
          # To update the status of the CNPs and CCNPs
          - patch
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies/status
          - ciliumclusterwidenetworkpolicies/status
          verbs:
          # Update the auto-generated CNPs and CCNPs status.
          - patch
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints
          - ciliumidentities
          verbs:
          # To perform garbage collection of such resources
          - delete
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          verbs:
          # To synchronize garbage collection of such resources
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes
          verbs:
          - create
          - update
          - get
          - list
          - watch
            # To perform CiliumNode garbage collector
          - delete
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes/status
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpointslices
          - ciliumenvoyconfigs
          - ciliumbgppeerconfigs
          - ciliumbgpadvertisements
          - ciliumbgpnodeconfigs
          verbs:
          - create
          - update
          - get
          - list
          - watch
          - delete
          - patch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - update
          resourceNames:
          - ciliumloadbalancerippools.cilium.io
          - ciliumbgppeeringpolicies.cilium.io
          - ciliumbgpclusterconfigs.cilium.io
          - ciliumbgppeerconfigs.cilium.io
          - ciliumbgpadvertisements.cilium.io
          - ciliumbgpnodeconfigs.cilium.io
          - ciliumbgpnodeconfigoverrides.cilium.io
          - ciliumclusterwideenvoyconfigs.cilium.io
          - ciliumclusterwidenetworkpolicies.cilium.io
          - ciliumegressgatewaypolicies.cilium.io
          - ciliumendpoints.cilium.io
          - ciliumendpointslices.cilium.io
          - ciliumenvoyconfigs.cilium.io
          - ciliumexternalworkloads.cilium.io
          - ciliumidentities.cilium.io
          - ciliumlocalredirectpolicies.cilium.io
          - ciliumnetworkpolicies.cilium.io
          - ciliumnodes.cilium.io
          - ciliumnodeconfigs.cilium.io
          - ciliumcidrgroups.cilium.io
          - ciliuml2announcementpolicies.cilium.io
          - ciliumpodippools.cilium.io
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools
          - ciliumpodippools
          - ciliumbgpclusterconfigs
          - ciliumbgpnodeconfigoverrides
          verbs:
          - get
          - list
          - watch
        - apiGroups:
            - cilium.io
          resources:
            - ciliumpodippools
          verbs:
            - create
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools/status
          verbs:
          - patch
        # For cilium-operator running in HA mode.
        #
        # Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
        # between multiple running instances.
        # The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
        # common and fewer objects in the cluster watch "all Leases".
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
          - get
          - update
        ---
        # Source: cilium/charts/cilium/templates/hubble-ui/clusterrole.yaml
        kind: ClusterRole
        apiVersion: rbac.authorization.k8s.io/v1
        metadata:
          name: hubble-ui
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - componentstatuses
          - endpoints
          - namespaces
          - nodes
          - pods
          - services
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - "*"
          verbs:
          - get
          - list
          - watch
        ---
        # Source: cilium/charts/cilium/templates/cilium-agent/clusterrolebinding.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: cilium
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cilium
        subjects:
        - kind: ServiceAccount
          name: "cilium"
          namespace: kube-system
        ---
        # Source: cilium/charts/cilium/templates/cilium-operator/clusterrolebinding.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: cilium-operator
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cilium-operator
        subjects:
        - kind: ServiceAccount
          name: "cilium-operator"
          namespace: kube-system
        ---
        # Source: cilium/charts/cilium/templates/hubble-ui/clusterrolebinding.yaml
        kind: ClusterRoleBinding
        apiVersion: rbac.authorization.k8s.io/v1
        metadata:
          name: hubble-ui
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: hubble-ui
        subjects:
        - kind: ServiceAccount
          name: "hubble-ui"
          namespace: kube-system
        ---
        # Source: cilium/charts/cilium/templates/cilium-agent/role.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          name: cilium-config-agent
          namespace: kube-system
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
        ---
        # Source: cilium/charts/cilium/templates/cilium-agent/rolebinding.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          name: cilium-config-agent
          namespace: kube-system
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: cilium-config-agent
        subjects:
          - kind: ServiceAccount
            name: "cilium"
            namespace: kube-system
        ---
        # Source: cilium/charts/cilium/templates/hubble-relay/service.yaml
        kind: Service
        apiVersion: v1
        metadata:
          name: hubble-relay
          namespace: kube-system
          labels:
            k8s-app: hubble-relay
            app.kubernetes.io/name: hubble-relay
            app.kubernetes.io/part-of: cilium
        spec:
          type: "ClusterIP"
          selector:
            k8s-app: hubble-relay
          ports:
          - protocol: TCP
            port: 80
            targetPort: 4245
        ---
        # Source: cilium/charts/cilium/templates/hubble-ui/service.yaml
        kind: Service
        apiVersion: v1
        metadata:
          name: hubble-ui
          namespace: kube-system
          annotations:
            omni-kube-service-exposer.sidero.dev/label: Hubble
            omni-kube-service-exposer.sidero.dev/port: "50080"
          labels:
            k8s-app: hubble-ui
            app.kubernetes.io/name: hubble-ui
            app.kubernetes.io/part-of: cilium
        spec:
          type: "ClusterIP"
          selector:
            k8s-app: hubble-ui
          ports:
            - name: http
              port: 80
              targetPort: 8081
        ---
        # Source: cilium/charts/cilium/templates/hubble/peer-service.yaml
        apiVersion: v1
        kind: Service
        metadata:
          name: hubble-peer
          namespace: kube-system
          labels:
            k8s-app: cilium
            app.kubernetes.io/part-of: cilium
            app.kubernetes.io/name: hubble-peer
        spec:
          selector:
            k8s-app: cilium
          ports:
          - name: peer-service
            port: 443
            protocol: TCP
            targetPort: 4244
          internalTrafficPolicy: Local
        ---
        # Source: cilium/charts/cilium/templates/cilium-agent/daemonset.yaml
        apiVersion: apps/v1
        kind: DaemonSet
        metadata:
          name: cilium
          namespace: kube-system
          labels:
            k8s-app: cilium
            app.kubernetes.io/part-of: cilium
            app.kubernetes.io/name: cilium-agent
        spec:
          selector:
            matchLabels:
              k8s-app: cilium
          updateStrategy:
            rollingUpdate:
              maxUnavailable: 2
            type: RollingUpdate
          template:
            metadata:
              annotations:
              labels:
                k8s-app: cilium
                app.kubernetes.io/name: cilium-agent
                app.kubernetes.io/part-of: cilium
            spec:
              containers:
              - name: cilium-agent
                image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
                imagePullPolicy: IfNotPresent
                command:
                - cilium-agent
                args:
                - --config-dir=/tmp/cilium/config-map
                startupProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                    httpHeaders:
                    - name: "brief"
                      value: "true"
                  failureThreshold: 105
                  periodSeconds: 2
                  successThreshold: 1
                  initialDelaySeconds: 5
                livenessProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                    httpHeaders:
                    - name: "brief"
                      value: "true"
                  periodSeconds: 30
                  successThreshold: 1
                  failureThreshold: 10
                  timeoutSeconds: 5
                readinessProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                    httpHeaders:
                    - name: "brief"
                      value: "true"
                  periodSeconds: 30
                  successThreshold: 1
                  failureThreshold: 3
                  timeoutSeconds: 5
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: CILIUM_CLUSTERMESH_CONFIG
                  value: /var/lib/cilium/clustermesh/
                - name: GOMEMLIMIT
                  valueFrom:
                    resourceFieldRef:
                      resource: limits.memory
                      divisor: '1'
                - name: KUBERNETES_SERVICE_HOST
                  value: "localhost"
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                lifecycle:
                  postStart:
                    exec:
                      command:
                      - "bash"
                      - "-c"
                      - |
                            set -o errexit
                            set -o pipefail
                            set -o nounset
                            
                            # When running in AWS ENI mode, it's likely that 'aws-node' has
                            # had a chance to install SNAT iptables rules. These can result
                            # in dropped traffic, so we should attempt to remove them.
                            # We do it using a 'postStart' hook since this may need to run
                            # for nodes which might have already been init'ed but may still
                            # have dangling rules. This is safe because there are no
                            # dependencies on anything that is part of the startup script
                            # itself, and can be safely run multiple times per node (e.g. in
                            # case of a restart).
                            if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                            then
                                echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                                iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                            fi
                            echo 'Done!'
                            
                  preStop:
                    exec:
                      command:
                      - /cni-uninstall.sh
                securityContext:
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                  capabilities:
                    add:
                      - CHOWN
                      - KILL
                      - NET_ADMIN
                      - NET_RAW
                      - IPC_LOCK
                      - SYS_ADMIN
                      - SYS_RESOURCE
                      - DAC_OVERRIDE
                      - FOWNER
                      - SETUID
                      - SETGID
                    drop:
                      - ALL
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                # Unprivileged containers need to mount /proc/sys/net from the host
                # to have write access
                - mountPath: /host/proc/sys/net
                  name: host-proc-sys-net
                # Unprivileged containers need to mount /proc/sys/kernel from the host
                # to have write access
                - mountPath: /host/proc/sys/kernel
                  name: host-proc-sys-kernel
                - name: bpf-maps
                  mountPath: /sys/fs/bpf
                  # Unprivileged containers can't set mount propagation to bidirectional
                  # in this case we will mount the bpf fs from an init container that
                  # is privileged and set the mount propagation from host to container
                  # in Cilium.
                  mountPropagation: HostToContainer
                # Check for duplicate mounts before mounting
                - name: cilium-cgroup
                  mountPath: /sys/fs/cgroup
                - name: cilium-run
                  mountPath: /var/run/cilium
                - name: etc-cni-netd
                  mountPath: /host/etc/cni/net.d
                - name: clustermesh-secrets
                  mountPath: /var/lib/cilium/clustermesh
                  readOnly: true
                  # Needed to be able to load kernel modules
                - name: lib-modules
                  mountPath: /lib/modules
                  readOnly: true
                - name: xtables-lock
                  mountPath: /run/xtables.lock
                - name: hubble-tls
                  mountPath: /var/lib/cilium/tls/hubble
                  readOnly: true
                - name: tmp
                  mountPath: /tmp
              initContainers:
              - name: config
                image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
                imagePullPolicy: IfNotPresent
                command:
                - cilium-dbg
                - build-config
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: KUBERNETES_SERVICE_HOST
                  value: "localhost"
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                volumeMounts:
                - name: tmp
                  mountPath: /tmp
                terminationMessagePolicy: FallbackToLogsOnError
              # Mount the bpf fs if it is not mounted. We will perform this task
              # from a privileged container because the mount propagation bidirectional
              # only works from privileged containers.
              - name: mount-bpf-fs
                image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
                imagePullPolicy: IfNotPresent
                args:
                - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
                command:
                - /bin/bash
                - -c
                - --
                terminationMessagePolicy: FallbackToLogsOnError
                securityContext:
                  privileged: true
                volumeMounts:
                - name: bpf-maps
                  mountPath: /sys/fs/bpf
                  mountPropagation: Bidirectional
              - name: clean-cilium-state
                image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
                imagePullPolicy: IfNotPresent
                command:
                - /init-container.sh
                env:
                - name: CILIUM_ALL_STATE
                  valueFrom:
                    configMapKeyRef:
                      name: cilium-config
                      key: clean-cilium-state
                      optional: true
                - name: CILIUM_BPF_STATE
                  valueFrom:
                    configMapKeyRef:
                      name: cilium-config
                      key: clean-cilium-bpf-state
                      optional: true
                - name: WRITE_CNI_CONF_WHEN_READY
                  valueFrom:
                    configMapKeyRef:
                      name: cilium-config
                      key: write-cni-conf-when-ready
                      optional: true
                - name: KUBERNETES_SERVICE_HOST
                  value: "localhost"
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                terminationMessagePolicy: FallbackToLogsOnError
                securityContext:
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                  capabilities:
                    add:
                      - NET_ADMIN
                      - SYS_ADMIN
                      - SYS_RESOURCE
                    drop:
                      - ALL
                volumeMounts:
                - name: bpf-maps
                  mountPath: /sys/fs/bpf
                  # Required to mount cgroup filesystem from the host to cilium agent pod
                - name: cilium-cgroup
                  mountPath: /sys/fs/cgroup
                  mountPropagation: HostToContainer
                - name: cilium-run
                  mountPath: /var/run/cilium # wait-for-kube-proxy
              # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
              - name: install-cni-binaries
                image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
                imagePullPolicy: IfNotPresent
                command:
                  - "/install-plugin.sh"
                resources:
                  requests:
                    cpu: 100m
                    memory: 10Mi
                securityContext:
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                  capabilities:
                    drop:
                      - ALL
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                  - name: cni-path
                    mountPath: /host/opt/cni/bin # .Values.cni.install
              restartPolicy: Always
              priorityClassName: system-node-critical
              serviceAccount: "cilium"
              serviceAccountName: "cilium"
              automountServiceAccountToken: true
              terminationGracePeriodSeconds: 1
              hostNetwork: true
              affinity:
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium
                    topologyKey: kubernetes.io/hostname
              nodeSelector:
                kubernetes.io/os: linux
              tolerations:
                - operator: Exists
              volumes:
                # For sharing configuration between the "config" initContainer and the agent
              - name: tmp
                emptyDir: {}
                # To keep state between restarts / upgrades
              - name: cilium-run
                hostPath:
                  path: /var/run/cilium
                  type: DirectoryOrCreate
                # To keep state between restarts / upgrades for bpf maps
              - name: bpf-maps
                hostPath:
                  path: /sys/fs/bpf
                  type: DirectoryOrCreate
              # To keep state between restarts / upgrades for cgroup2 filesystem
              - name: cilium-cgroup
                hostPath:
                  path: /sys/fs/cgroup
                  type: DirectoryOrCreate
              # To install cilium cni plugin in the host
              - name: cni-path
                hostPath:
                  path:  /opt/cni/bin
                  type: DirectoryOrCreate
                # To install cilium cni configuration in the host
              - name: etc-cni-netd
                hostPath:
                  path: /etc/cni/net.d
                  type: DirectoryOrCreate
                # To be able to load kernel modules
              - name: lib-modules
                hostPath:
                  path: /lib/modules
                # To access iptables concurrently with other processes (e.g. kube-proxy)
              - name: xtables-lock
                hostPath:
                  path: /run/xtables.lock
                  type: FileOrCreate
                # To read the clustermesh configuration
              - name: clustermesh-secrets
                projected:
                  # note: the leading zero means this number is in octal representation: do not remove it
                  defaultMode: 0400
                  sources:
                  - secret:
                      name: cilium-clustermesh
                      optional: true
                      # note: items are not explicitly listed here, since the entries of this secret
                      # depend on the peers configured, and that would cause a restart of all agents
                      # at every addition/removal. Leaving the field empty makes each secret entry
                      # to be automatically projected into the volume as a file whose name is the key.
                  - secret:
                      name: clustermesh-apiserver-remote-cert
                      optional: true
                      items:
                      - key: tls.key
                        path: common-etcd-client.key
                      - key: tls.crt
                        path: common-etcd-client.crt
                      - key: ca.crt
                        path: common-etcd-client-ca.crt
              - name: host-proc-sys-net
                hostPath:
                  path: /proc/sys/net
                  type: Directory
              - name: host-proc-sys-kernel
                hostPath:
                  path: /proc/sys/kernel
                  type: Directory
              - name: hubble-tls
                projected:
                  # note: the leading zero means this number is in octal representation: do not remove it
                  defaultMode: 0400
                  sources:
                  - secret:
                      name: hubble-server-certs
                      optional: true
                      items:
                      - key: tls.crt
                        path: server.crt
                      - key: tls.key
                        path: server.key
                      - key: ca.crt
                        path: client-ca.crt
        ---
        # Source: cilium/charts/cilium/templates/cilium-operator/deployment.yaml
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: cilium-operator
          namespace: kube-system
          labels:
            io.cilium/app: operator
            name: cilium-operator
            app.kubernetes.io/part-of: cilium
            app.kubernetes.io/name: cilium-operator
        spec:
          # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
          # for more details.
          replicas: 2
          selector:
            matchLabels:
              io.cilium/app: operator
              name: cilium-operator
          # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
          # of one replica and no user configured Recreate strategy.
          # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
          # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
          strategy:
            rollingUpdate:
              maxSurge: 25%
              maxUnavailable: 50%
            type: RollingUpdate
          template:
            metadata:
              annotations:
                prometheus.io/port: "9963"
                prometheus.io/scrape: "true"
              labels:
                io.cilium/app: operator
                name: cilium-operator
                app.kubernetes.io/part-of: cilium
                app.kubernetes.io/name: cilium-operator
            spec:
              containers:
              - name: cilium-operator
                image: "quay.io/cilium/operator-generic:v1.15.6@sha256:5789f0935eef96ad571e4f5565a8800d3a8fbb05265cf6909300cd82fd513c3d"
                imagePullPolicy: IfNotPresent
                command:
                - cilium-operator-generic
                args:
                - --config-dir=/tmp/cilium/config-map
                - --debug=$(CILIUM_DEBUG)
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: CILIUM_DEBUG
                  valueFrom:
                    configMapKeyRef:
                      key: debug
                      name: cilium-config
                      optional: true
                - name: KUBERNETES_SERVICE_HOST
                  value: "localhost"
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                ports:
                - name: prometheus
                  containerPort: 9963
                  hostPort: 9963
                  protocol: TCP
                livenessProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9234
                    scheme: HTTP
                  initialDelaySeconds: 60
                  periodSeconds: 10
                  timeoutSeconds: 3
                readinessProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9234
                    scheme: HTTP
                  initialDelaySeconds: 0
                  periodSeconds: 5
                  timeoutSeconds: 3
                  failureThreshold: 5
                volumeMounts:
                - name: cilium-config-path
                  mountPath: /tmp/cilium/config-map
                  readOnly: true
                terminationMessagePolicy: FallbackToLogsOnError
              hostNetwork: true
              restartPolicy: Always
              priorityClassName: system-cluster-critical
              serviceAccount: "cilium-operator"
              serviceAccountName: "cilium-operator"
              automountServiceAccountToken: true
              # In HA mode, cilium-operator pods must not be scheduled on the same
              # node as they will clash with each other.
              affinity:
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        io.cilium/app: operator
                    topologyKey: kubernetes.io/hostname
              nodeSelector:
                kubernetes.io/os: linux
              tolerations:
                - operator: Exists
              volumes:
                # To read the configuration from the config map
              - name: cilium-config-path
                configMap:
                  name: cilium-config
        ---
        # Source: cilium/charts/cilium/templates/hubble-relay/deployment.yaml
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: hubble-relay
          namespace: kube-system
          labels:
            k8s-app: hubble-relay
            app.kubernetes.io/name: hubble-relay
            app.kubernetes.io/part-of: cilium
        spec:
          replicas: 1
          selector:
            matchLabels:
              k8s-app: hubble-relay
          strategy:
            rollingUpdate:
              maxUnavailable: 1
            type: RollingUpdate
          template:
            metadata:
              annotations:
              labels:
                k8s-app: hubble-relay
                app.kubernetes.io/name: hubble-relay
                app.kubernetes.io/part-of: cilium
            spec:
              securityContext:
                fsGroup: 65532
              containers:
                - name: hubble-relay
                  securityContext:
                    capabilities:
                      drop:
                      - ALL
                    runAsGroup: 65532
                    runAsNonRoot: true
                    runAsUser: 65532
                  image: "quay.io/cilium/hubble-relay:v1.15.6@sha256:a0863dd70d081b273b87b9b7ce7e2d3f99171c2f5e202cd57bc6691e51283e0c"
                  imagePullPolicy: IfNotPresent
                  command:
                    - hubble-relay
                  args:
                    - serve
                  ports:
                    - name: grpc
                      containerPort: 4245
                  readinessProbe:
                    grpc:
                      port: 4222
                    timeoutSeconds: 3
                  livenessProbe:
                    grpc:
                      port: 4222
                    timeoutSeconds: 3
                  startupProbe:
                    # give the relay one minute to start up
                    grpc:
                      port: 4222
                    timeoutSeconds: 3
                    failureThreshold: 20
                    periodSeconds: 3
                  volumeMounts:
                  - name: config
                    mountPath: /etc/hubble-relay
                    readOnly: true
                  - name: tls
                    mountPath: /var/lib/hubble-relay/tls
                    readOnly: true
                  terminationMessagePolicy: FallbackToLogsOnError
              restartPolicy: Always
              priorityClassName: 
              serviceAccount: "hubble-relay"
              serviceAccountName: "hubble-relay"
              automountServiceAccountToken: false
              terminationGracePeriodSeconds: 1
              affinity:
                podAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium
                    topologyKey: kubernetes.io/hostname
              nodeSelector:
                kubernetes.io/os: linux
              volumes:
              - name: config
                configMap:
                  name: hubble-relay-config
                  items:
                  - key: config.yaml
                    path: config.yaml
              - name: tls
                projected:
                  # note: the leading zero means this number is in octal representation: do not remove it
                  defaultMode: 0400
                  sources:
                  - secret:
                      name: hubble-relay-client-certs
                      items:
                        - key: tls.crt
                          path: client.crt
                        - key: tls.key
                          path: client.key
                        - key: ca.crt
                          path: hubble-server-ca.crt
        ---
        # Source: cilium/charts/cilium/templates/hubble-ui/deployment.yaml
        kind: Deployment
        apiVersion: apps/v1
        metadata:
          name: hubble-ui
          namespace: kube-system
          labels:
            k8s-app: hubble-ui
            app.kubernetes.io/name: hubble-ui
            app.kubernetes.io/part-of: cilium
        spec:
          replicas: 1
          selector:
            matchLabels:
              k8s-app: hubble-ui
          strategy:
            rollingUpdate:
              maxUnavailable: 1
            type: RollingUpdate
          template:
            metadata:
              annotations:
              labels:
                k8s-app: hubble-ui
                app.kubernetes.io/name: hubble-ui
                app.kubernetes.io/part-of: cilium
            spec:
              securityContext:
                fsGroup: 1001
                runAsGroup: 1001
                runAsUser: 1001
              priorityClassName: 
              serviceAccount: "hubble-ui"
              serviceAccountName: "hubble-ui"
              automountServiceAccountToken: true
              containers:
              - name: frontend
                image: "quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666"
                imagePullPolicy: IfNotPresent
                ports:
                - name: http
                  containerPort: 8081
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                readinessProbe:
                  httpGet:
                    path: /
                    port: 8081
                volumeMounts:
                - name: hubble-ui-nginx-conf
                  mountPath: /etc/nginx/conf.d/default.conf
                  subPath: nginx.conf
                - name: tmp-dir
                  mountPath: /tmp
                terminationMessagePolicy: FallbackToLogsOnError
              - name: backend
                image: "quay.io/cilium/hubble-ui-backend:v0.13.0@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803"
                imagePullPolicy: IfNotPresent
                env:
                - name: EVENTS_SERVER_PORT
                  value: "8090"
                - name: FLOWS_API_ADDR
                  value: "hubble-relay:80"
                ports:
                - name: grpc
                  containerPort: 8090
                volumeMounts:
                terminationMessagePolicy: FallbackToLogsOnError
              nodeSelector:
                kubernetes.io/os: linux
              volumes:
              - configMap:
                  defaultMode: 420
                  name: hubble-ui-nginx
                name: hubble-ui-nginx-conf
              - emptyDir: {}
                name: tmp-dir
